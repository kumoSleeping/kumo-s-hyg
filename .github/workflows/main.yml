name: Build and Release Python

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 关键修复：添加权限

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Extract version from __init__.py
      id: get_version
      run: |
        echo "VERSION=$(python app/__init__.py -v)" >> $GITHUB_ENV

    - name: Build exe with PyInstaller
      run: |
        pyinstaller --onefile --name your_app_name --hidden-import noneprompt --hidden-import PyYAML --hidden-import requests --hidden-import qrcode --hidden-import loguru --hidden-import PIL --add-data "app:app" run.py

    - name: Create Git Tag (可选，确保标签存在)
      run: |
        git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      uses: softprops/action-gh-release@v2  # 改用 v2
      with:
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}
        body: "Automated release for version ${{ env.VERSION }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload executable to Release
      uses: softprops/action-gh-release@v2  # 改用 v2
      with:
        files: dist/your_app_name*  # 确保路径匹配
